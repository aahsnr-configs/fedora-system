gui:
  # Catppuccin Mocha Theme (maintained from original)
  theme:
    lightTheme: false
    activeBorderColor:
      - '#cba6f7' # Catppuccin Mocha Mauve
      - bold
    inactiveBorderColor:
      - '#6c7086' # Catppuccin Mocha Surface2
    optionsTextColor:
      - '#89b4fa' # Catppuccin Mocha Blue
    selectedLineBgColor:
      - '#313244' # Catppuccin Mocha Surface0
    selectedRangeBgColor:
      - '#313244' # Catppuccin Mocha Surface0
    searchingActiveBorderColor:
      - '#fab387' # Catppuccin Mocha Peach
    cherryPickedCommitBgColor:
      - '#313244' # Catppuccin Mocha Surface0
    cherryPickedCommitFgColor:
      - '#a6e3a1' # Catppuccin Mocha Green
    unstagedChangesColor:
      - '#f38ba8' # Catppuccin Mocha Red
    defaultFgColor:
      - '#cdd6f4' # Catppuccin Mocha Text
  # Enhanced display settings for better AstroNvim integration
  scrollHeight: 2
  scrollPastBottom: true
  mouseEvents: true
  skipDiscardChangeWarning: false
  skipStashWarning: false
  showFileTree: true
  showListFooter: true
  showRandomTip: true
  showBranchCommitHash: true
  showBottomLine: true
  showPanelJumps: true
  showCommandLog: true
  showIcons: true
  nerdFontsVersion: "3"
  commitLength:
    show: true
  splitDiff: 'auto'
  skipRewordInEditorWarning: false
  border: 'rounded'
  animateExpansion: true
  portraitMode: 'auto'
  filterMode: 'substring'
  spinner:
    frames: ['⠋', '⠙', '⠹', '⠸', '⠼', '⠴', '⠦', '⠧', '⠇', '⠏']
    rate: 50
  # Vim-like keybindings optimized for AstroNvim users
  keybinding:
    universal:
      quit: 'q'
      quit-alt1: '<c-c>'
      return: '<esc>'
      quitWithoutChangingDirectory: 'Q'
      togglePanel: '<tab>'
      prevItem: 'k'
      nextItem: 'j'
      prevItem-alt: '<up>'
      nextItem-alt: '<down>'
      prevPage: '<c-u>'
      nextPage: '<c-d>'
      scrollLeft: 'H'
      scrollRight: 'L'
      gotoTop: 'gg'
      gotoBottom: 'G'
      toggleRangeSelect: 'v'
      rangeSelectDown: '<s-j>'
      rangeSelectUp: '<s-k>'
      prevBlock: '<left>'
      nextBlock: '<right>'
      prevBlock-alt: 'h'
      nextBlock-alt: 'l'
      nextTab: ']'
      prevTab: '['
      nextScreenMode: '+'
      prevScreenMode: '_'
      undo: 'z'
      redo: '<c-z>'
      filteringMenu: '<c-s>'
      diffingMenu: 'W'
      diffingMenu-alt: '<c-e>'
      copyToClipboard: '<c-o>'
      openRecentRepos: '<c-r>'
      submitEditorText: '<enter>'
      extrasMenu: '@'
      toggleWhitespaceInDiffView: '<c-w>'
      increaseContextInDiffView: '}'
      decreaseContextInDiffView: '{'
      increaseRenameSimilarityThreshold: ')'
      decreaseRenameSimilarityThreshold: '('
      openDiffTool: '<c-t>'
    status:
      checkForUpdate: 'u'
      recentRepos: '<enter>'
      allBranchesLogGraph: 'a'
    files:
      commitChanges: 'c'
      commitChangesWithoutHook: 'C'
      amendLastCommit: 'A'
      commitChangesWithEditor: '<c-o>'
      findBaseCommitForFixup: '<c-f>'
      confirmDiscard: 'x'
      ignoreFile: 'i'
      refreshFiles: 'r'
      stashAllChanges: 's'
      viewStashOptions: 'S'
      toggleStagedAll: 'a'
      viewResetOptions: 'D'
      fetch: 'f'
      toggleTreeView: '`'
      openMergeTool: 'M'
      openStatusFilter: '<c-b>'
    branches:
      createPullRequest: 'o'
      viewPullRequestOptions: 'O'
      copyPullRequestURL: '<c-y>'
      checkoutBranch: '<space>'
      checkoutBranch-alt: 'c'
      forceCheckoutBranch: 'F'
      rebaseBranch: 'r'
      renameBranch: 'R'
      mergeIntoCurrentBranch: 'm'
      viewBranchOptions: 'M'
      fastForward: 'f'
      createTag: 'T'
      push: 'P'
      pull: 'p'
      setUpstream: 'u'
      fetchRemote: 'f'
      sortOrder: 's'
      gitFlowOptions: 'i'
      createResetToBranchMenu: 'g'
      viewResetOptions: 'R'
      deleteBranch: 'd'
      mergeBranch: 'm'
      copyToClipboard: 'y'
    worktrees:
      viewWorktreeOptions: 'w'
    commits:
      squashDown: 's'
      renameCommit: 'r'
      renameCommitWithEditor: 'R'
      viewResetOptions: 'g'
      markCommitAsFixup: 'f'
      createFixupCommit: 'F'
      squashAboveCommits: 'S'
      moveDownCommit: '<c-j>'
      moveUpCommit: '<c-k>'
      amendToCommit: 'A'
      amendAttributeMenu: 'a'
      pickCommit: 'p'
      revertCommit: 't'
      cherryPickCopy: 'c'
      pasteCommits: 'v'
      markCommitAsBaseForRebase: 'B'
      tagCommit: 'T'
      checkoutCommit: '<space>'
      resetCherryPick: '<c-r>'
      copyCommitAttributeToClipboard: 'y'
      openLogMenu: '<c-l>'
      openInBrowser: 'o'
      viewBisectOptions: 'b'
      startInteractiveRebase: 'i'
    amendAttribute:
      resetAuthor: 'a'
      setAuthor: 'A'
      addCoAuthor: 'c'
    stash:
      popStash: 'g'
      renameStash: 'r'
      applyStash: 'a'
      viewStashOptions: '<enter>'
      dropStash: 'd'
    commitFiles:
      checkoutCommitFile: 'c'
    main:
      toggleSelectHunk: 'a'
      pickBothHunks: 'b'
      editSelectHunk: 'e'
      openFile: 'o'
      openFileInEditor: '<c-o>'
      openDiffTool: '<c-t>'
      refreshStagingPanel: 'r'
      stageSelection: 's'
      resetSelection: 'r'
      togglePanel: '<tab>'
      prevConflict: '['
      nextConflict: ']'
      selectPrevConflict: '<'
      selectNextConflict: '>'
      selectPrevHunk: 'K'
      selectNextHunk: 'J'
      undo: 'z'
      redo: '<c-z>'
      toggleDragSelect: 'v'
      toggleDragSelect-alt: 'V'
      toggleSelectHunk: 'a'
      copyToClipboard: '<c-o>'
    submodules:
      init: 'i'
      update: 'u'
      bulkMenu: 'b'
      delete: 'd'
      enter: '<enter>'
    commitMessage:
      confirm: '<enter>'
      switchToEditor: '<c-o>'
git:
  # Git configuration optimized for Fedora 42
  paging:
    colorArg: always
    pager: delta --dark --paging=never --line-numbers --side-by-side
    useConfig: false
    externalDiffCommand: ''
  # Fedora 42 specific settings
  commit:
    signOff: false
    autoWrapCommitMessage: true
    autoWrapWidth: 72
  merging:
    manualCommit: false
    args: ''
    tool: 'nvimdiff'
    conflictStyle: 'zdiff3'
  log:
    order: 'topo-order'
    showGraph: 'when-maximised'
    showWholeGraph: false
  skipHookPrefix: WIP
  autoFetch: true
  autoRefresh: true
  fetchAll: true
  branchLogCmd: 'git log --graph --color=always --abbrev-commit --decorate --date=relative --pretty=medium {{branchName}} --'
  overrideGpg: false
  disableForcePushing: false
  parseEmoji: false
  truncateCopiedCommitHashesTo: 12
  allBranchesLogCmds:
    - git log --graph --all --color=always --abbrev-commit --decorate --date=relative --pretty=medium
# OS-specific settings for Fedora 42
os:
  # Use nvim (AstroNvim) as the default editor
  editCommand: 'nvim'
  editCommandTemplate: '{{editor}} "{{filename}}"'
  editPreset: 'nvim'
  # Fedora 42 specific open command
  openCommand: 'xdg-open'
  openLinkCommand: 'xdg-open {{link}}'
  # Copy commands for Fedora 42
  copyToClipboardCmd: 'wl-copy' # For Wayland
  readFromClipboardCmd: 'wl-paste' # For Wayland
  # Alternative for X11 sessions
  # copyToClipboardCmd: 'xclip -selection clipboard'
  # readFromClipboardCmd: 'xclip -selection clipboard -o'
# Update and notification settings
update:
  method: 'prompt'
  days: 14
# Refresh settings
refresher:
  refreshInterval: 10
  fetchInterval: 60
# Confirmation settings
confirmOnQuit: false
quitOnTopLevelReturn: false
# Startup settings
disableStartupPopups: true
notARepository: 'prompt'
# Custom commands for enhanced AstroNvim integration
customCommands:
  # Quick commit amendments
  - key: 'E'
    command: 'git commit --amend --no-edit'
    context: 'commits'
    description: 'Amend commit without editing message'
    output: log
  # Open files in AstroNvim
  - key: 'n'
    command: 'nvim {{.SelectedFile.Name}}'
    context: 'files'
    description: 'Open file in AstroNvim'
    output: terminal
  # Advanced AstroNvim integration - global telescope git files
  - key: 'T'
    command: 'nvim -c "lua require(\"telescope.builtin\").git_files()"'
    context: 'global'
    description: 'Open AstroNvim with Telescope git files'
    output: terminal
  # View file history in AstroNvim
  - key: 'H'
    command: 'nvim -c "lua require(\"telescope.builtin\").git_bcommits()" {{.SelectedFile.Name}}'
    context: 'files'
    description: 'View file history with Telescope'
    output: terminal
  # Interactive rebase with AstroNvim
  - key: 'I'
    command: 'git rebase -i {{.SelectedLocalCommit.Sha}}^'
    context: 'commits'
    description: 'Interactive rebase from selected commit'
    output: terminal
  # Browse branches with AstroNvim telescope (fixed context)
  - key: 'B'
    command: 'nvim -c "lua require(\"telescope.builtin\").git_branches()"'
    context: 'localBranches'
    description: 'Browse branches with Telescope'
    output: terminal
  # Search commits with AstroNvim
  - key: '/'
    command: 'nvim -c "lua require(\"telescope.builtin\").git_commits()"'
    context: 'commits'
    description: 'Search commits with Telescope'
    output: terminal
  # View diff in AstroNvim
  - key: 'D'
    command: 'nvim -c "Gvdiffsplit" {{.SelectedFile.Name}}'
    context: 'files'
    description: 'View diff in AstroNvim with fugitive'
    output: terminal
  # Quick push with force-with-lease
  - key: 'P'
    command: 'git push --force-with-lease'
    context: 'global'
    description: 'Force push with lease (safer)'
    output: log
  # Stash with message
  - key: 'S'
    command: 'git stash push -m "{{.Form.Message}}"'
    context: 'files'
    description: 'Stash with custom message'
    prompts:
      - type: 'input'
        key: 'Message'
        title: 'Stash Message'
        initialValue: 'WIP: '
    output: log
  # Open current repo in AstroNvim
  - key: 'o'
    command: 'nvim .'
    context: 'global'
    description: 'Open current repository in AstroNvim'
    output: terminal
  # Git blame in AstroNvim
  - key: 'b'
    command: 'nvim -c "Git blame" {{.SelectedFile.Name}}'
    context: 'files'
    description: 'View git blame in AstroNvim'
    output: terminal
  # View stash content in AstroNvim
  - key: 'v'
    command: 'nvim -c "G stash show -p {{.SelectedStashEntry.Index}}"'
    context: 'stash'
    description: 'View stash content in AstroNvim'
    output: terminal
  # Open merge tool in AstroNvim
  - key: 'M'
    command: 'nvim -c "Gvdiffsplit!" {{.SelectedFile.Name}}'
    context: 'files'
    description: 'Open merge tool in AstroNvim'
    output: terminal
  # Create branch with input
  - key: 'N'
    command: 'git checkout -b {{.Form.BranchName}}'
    context: 'localBranches'
    description: 'Create new branch'
    prompts:
      - type: 'input'
        key: 'BranchName'
        title: 'Branch Name'
        initialValue: 'feature/'
    output: log
  # Cherry pick with edit
  - key: 'C'
    command: 'git cherry-pick --edit {{.SelectedLocalCommit.Sha}}'
    context: 'commits'
    description: 'Cherry pick with edit'
    output: terminal
  # View remote branches with telescope
  - key: 'R'
    command: 'nvim -c "lua require(\"telescope.builtin\").git_branches({show_remote_tracking_branches=true})"'
    context: 'remoteBranches'
    description: 'Browse remote branches with Telescope'
    output: terminal
# AstroNvim specific services configuration
services:
  # Enable GitHub integration if available
  github: 'github.com'
  gitlab: 'gitlab.com'
# Fedora 42 performance optimizations
performance:
  useAsyncGit: true
  reportRuntimeErrors: true
